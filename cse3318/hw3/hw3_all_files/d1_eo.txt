This program will create a max-heap and perform operations on it based on data from a file.
 
Operation: p
print_on = 1

in main:
array is NULL

Operation: l
load array...

in main:
Array:  size: 10, capacity : 10
indexes:           0,      1,      2,      3,      4,      5,      6,      7,      8,      9, 
values:           13,      9,     11,      7,      5,     10,      3,      2,      4,      1, 

Operation: d
decrease and sink down: item at index   2 becomes     12
Array:  size: 10, capacity : 10
indexes:           0,      1,      2,      3,      4,      5,      6,      7,      8,      9, 
values:           13,      9,     12,      7,      5,     10,      3,      2,      4,      1, 
sink_down: idx = 2

in main:
Array:  size: 10, capacity : 10
indexes:           0,      1,      2,      3,      4,      5,      6,      7,      8,      9, 
values:           13,      9,     12,      7,      5,     10,      3,      2,      4,      1, 

Operation: d
decrease and sink down: item at index   1 becomes      3
Array:  size: 10, capacity : 10
indexes:           0,      1,      2,      3,      4,      5,      6,      7,      8,      9, 
values:           13,      3,     12,      7,      5,     10,      3,      2,      4,      1, 
sink_down: idx = 1
sink_down: idx = 3
sink_down: idx = 8

in main:
Array:  size: 10, capacity : 10
indexes:           0,      1,      2,      3,      4,      5,      6,      7,      8,      9, 
values:           13,      7,     12,      4,      5,     10,      3,      2,      3,      1, 

Operation: d
decrease and sink down: item at index   0 becomes      1
Array:  size: 10, capacity : 10
indexes:           0,      1,      2,      3,      4,      5,      6,      7,      8,      9, 
values:            1,      7,     12,      4,      5,     10,      3,      2,      3,      1, 
sink_down: idx = 0
sink_down: idx = 2
sink_down: idx = 5

in main:
Array:  size: 10, capacity : 10
indexes:           0,      1,      2,      3,      4,      5,      6,      7,      8,      9, 
values:           12,      7,     10,      4,      5,      1,      3,      2,      3,      1, 

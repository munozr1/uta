{"diagram":"ClassDiagram","nodes":[{"methods":"+ rollDice(String): int\n+ characterCreationMenu(Scanner, ArrayList<Weapon>): Player\n+  createWeapons(String): ArrayList<Weapon> \n- printPlayerCreationStatState(int, int, int, int): void\n-  manualStats(Scanner in, ArrayList<Weapon> weapons): Player\n-  randomStats(Scanner, ArrayList<Weapon>): Player\n+ movePlayer(Map, Player, Scanner): void\n+ confirm(Scanner): boolean\n+ clearScreen(): void","name":"GameUtility","x":370,"y":10,"attributes":"","id":2,"type":"ClassNode"},{"methods":"private static void saveCharecter(Scanner in, ArrayList<Player> players)\nprivate static void createCharecters(Scanner in, ArrayList<Player> players, ArrayList<Weapon> weapons)\n private static Player loadCharecter(Scanner in, ArrayList<Player> players)\nprivate static void pvp(ArrayList<Player> players, Scanner in)\nprivate static void pvm(ArrayList<Player> players, Scanner in, ArrayList<Monster> monsters)\nprivate static void startGame(ArrayList<Player> players, Scanner in, ArrayList<Monster> monsters)","name":"Application","x":860,"y":30,"attributes":"","id":3,"type":"ClassNode"},{"methods":"","name":"MonsterEnum","x":210,"y":600,"attributes":"Humanoid\nFiend\nDragon","id":8,"type":"ClassNode"},{"methods":"public void move(ArrayList<Player> players, Map map)\nprivate Player getClosestPlayer(ArrayList<Player> players)\npublic void attack(Creature victim)\npublic void move(ArrayList<Player> players, Map map)","name":"Monster","x":10,"y":410,"attributes":"-monsterType: MonsterEnum","id":5,"type":"ClassNode"},{"methods":"public void getX()\npublic void getY()\npublic int setX(int x)\npublic int setY(int y)","name":"Coordinate","x":20,"y":590,"attributes":"- int x\n- int y","id":7,"type":"ClassNode"},{"methods":"public int rollDamage()\npublic String getName()\npublic String getDiceType()\npublic int getBonus()\npublic void setName(String name)\npublic void setDiceType(String input)\npublic void setBonus(int input)","name":"Weapon","x":60,"y":40,"attributes":"- String Name\n- String DiceType\n- int Bonus","id":0,"type":"ClassNode"},{"methods":"public void saveToCsv(Player p)\npublic static String writeToCsv:(Player p)\npublic void randomizeStats()","name":"Player","x":50,"y":270,"attributes":"-Weapon : Weapon\n-Level : int","id":4,"type":"ClassNode"},{"methods":"+ isOccupied(int, int): boolean","name":"Map","x":1030,"y":200,"attributes":"-map: Player[][]","id":6,"type":"ClassNode"},{"methods":"public void attack(Player victim)\npublic void dissarm(Player victim)\npublic void dissarmed()\nprivate int rollHit()\npublic void takeDamage(int damage)\npublic Weapon getWeapon()\npublic int getLevel()\npublic int getArmorClass()\npublic int getExperience()\npublic int getHealthPoints()\npublic int getStrength()\npublic int getDexterity() \npublic int getConstitution()\npublic Date getCreationDate()\npublic String toString()","name":"Creature","x":440,"y":270,"attributes":"-Name : string \n-ArmorClass : int\n-Experience : int\n-HealthPoints : int\n-Strength: int\n-Dexterity: int\n-Constitution: int\n-Date CreationDate: int\n-x: int\n-y: int","id":1,"type":"ClassNode"}],"edges":[{"startLabel":"","middleLabel":"","start":6,"end":1,"endLabel":"","type":"AggregationEdge","Aggregation Type":"Aggregation"},{"startLabel":"","middleLabel":"","start":2,"directionality":"Unspecified","end":6,"endLabel":"","type":"AssociationEdge"},{"startLabel":"","middleLabel":"","start":2,"directionality":"Unspecified","end":1,"endLabel":"","type":"AssociationEdge"},{"Generalization Type":"Inheritance","start":4,"end":1,"type":"GeneralizationEdge"},{"Generalization Type":"Inheritance","start":5,"end":1,"type":"GeneralizationEdge"},{"startLabel":"","middleLabel":"","start":0,"directionality":"Unspecified","end":4,"endLabel":"","type":"AssociationEdge"},{"middleLabel":"","start":2,"directionality":"Unidirectional","end":3,"type":"DependencyEdge"},{"middleLabel":"","start":6,"directionality":"Unidirectional","end":3,"type":"DependencyEdge"},{"middleLabel":"","start":7,"directionality":"Unidirectional","end":5,"type":"DependencyEdge"},{"middleLabel":"","start":8,"directionality":"Unidirectional","end":5,"type":"DependencyEdge"}],"version":"3.4"}
